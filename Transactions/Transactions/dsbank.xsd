<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="dsbank" targetNamespace="http://tempuri.org/dsbank.xsd" xmlns:mstns="http://tempuri.org/dsbank.xsd" xmlns="http://tempuri.org/dsbank.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="bankConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="bankConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Transactions.My.MySettings.GlobalReference.Default.bankConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CheckingTableAdapter" GeneratorDataComponentClassName="CheckingTableAdapter" Name="Checking" UserDataComponentName="CheckingTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bankConnectionString (MySettings)" DbObjectName="dbo.Checking" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Checking] WHERE (([Checking_id] = @Original_Checking_id) AND ([Cust_id] = @Original_Cust_id) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Checking_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Checking_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Checking] ([Cust_id], [Amount]) VALUES (@Cust_id, @Amount);
SELECT Checking_id, Cust_id, Amount FROM Checking WHERE (Checking_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Checking_id, Cust_id, Amount FROM dbo.Checking</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Checking] SET [Cust_id] = @Cust_id, [Amount] = @Amount WHERE (([Checking_id] = @Original_Checking_id) AND ([Cust_id] = @Original_Cust_id) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)));
SELECT Checking_id, Cust_id, Amount FROM Checking WHERE (Checking_id = @Checking_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Checking_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Checking_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Checking_id" ColumnName="Checking_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Checking_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Checking_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Checking_id" DataSetColumn="Checking_id" />
              <Mapping SourceColumn="Cust_id" DataSetColumn="Cust_id" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CustomerTableAdapter" GeneratorDataComponentClassName="CustomerTableAdapter" Name="Customer" UserDataComponentName="CustomerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bankConnectionString (MySettings)" DbObjectName="dbo.Customer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Customer] WHERE (([Cust_id] = @Original_Cust_id) AND ([CustName] = @Original_CustName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CustName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Customer] ([CustName]) VALUES (@CustName);
SELECT Cust_id, CustName FROM Customer WHERE (Cust_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CustName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Cust_id, CustName FROM dbo.Customer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Customer] SET [CustName] = @CustName WHERE (([Cust_id] = @Original_Cust_id) AND ([CustName] = @Original_CustName));
SELECT Cust_id, CustName FROM Customer WHERE (Cust_id = @Cust_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CustName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CustName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CustName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Cust_id" ColumnName="Cust_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Cust_id" DataSetColumn="Cust_id" />
              <Mapping SourceColumn="CustName" DataSetColumn="CustName" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SavingsTableAdapter" GeneratorDataComponentClassName="SavingsTableAdapter" Name="Savings" UserDataComponentName="SavingsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="bankConnectionString (MySettings)" DbObjectName="dbo.Savings" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Savings] WHERE (([Savings_id] = @Original_Savings_id) AND ([Cust_id] = @Original_Cust_id) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Savings_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Savings_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Savings] ([Cust_id], [Amount]) VALUES (@Cust_id, @Amount);
SELECT Savings_id, Cust_id, Amount FROM Savings WHERE (Savings_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Savings_id, Cust_id, Amount FROM dbo.Savings</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Savings] SET [Cust_id] = @Cust_id, [Amount] = @Amount WHERE (([Savings_id] = @Original_Savings_id) AND ([Cust_id] = @Original_Cust_id) AND ((@IsNull_Amount = 1 AND [Amount] IS NULL) OR ([Amount] = @Original_Amount)));
SELECT Savings_id, Cust_id, Amount FROM Savings WHERE (Savings_id = @Savings_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Savings_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Savings_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Cust_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Cust_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Amount" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Currency" Direction="Input" ParameterName="@Original_Amount" Precision="0" ProviderType="Money" Scale="0" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Savings_id" ColumnName="Savings_id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Savings_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Savings_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Savings_id" DataSetColumn="Savings_id" />
              <Mapping SourceColumn="Cust_id" DataSetColumn="Cust_id" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="dsbank" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="dsbank" msprop:Generator_UserDSName="dsbank">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Checking" msprop:Generator_TableClassName="CheckingDataTable" msprop:Generator_TableVarName="tableChecking" msprop:Generator_TablePropName="Checking" msprop:Generator_RowDeletingName="CheckingRowDeleting" msprop:Generator_RowChangingName="CheckingRowChanging" msprop:Generator_RowEvHandlerName="CheckingRowChangeEventHandler" msprop:Generator_RowDeletedName="CheckingRowDeleted" msprop:Generator_UserTableName="Checking" msprop:Generator_RowChangedName="CheckingRowChanged" msprop:Generator_RowEvArgName="CheckingRowChangeEvent" msprop:Generator_RowClassName="CheckingRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Checking_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnChecking_id" msprop:Generator_ColumnPropNameInRow="Checking_id" msprop:Generator_ColumnPropNameInTable="Checking_idColumn" msprop:Generator_UserColumnName="Checking_id" type="xs:int" />
              <xs:element name="Cust_id" msprop:Generator_ColumnVarNameInTable="columnCust_id" msprop:Generator_ColumnPropNameInRow="Cust_id" msprop:Generator_ColumnPropNameInTable="Cust_idColumn" msprop:Generator_UserColumnName="Cust_id" type="xs:int" />
              <xs:element name="Amount" msprop:Generator_ColumnVarNameInTable="columnAmount" msprop:Generator_ColumnPropNameInRow="Amount" msprop:Generator_ColumnPropNameInTable="AmountColumn" msprop:Generator_UserColumnName="Amount" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Customer" msprop:Generator_TableClassName="CustomerDataTable" msprop:Generator_TableVarName="tableCustomer" msprop:Generator_TablePropName="Customer" msprop:Generator_RowDeletingName="CustomerRowDeleting" msprop:Generator_RowChangingName="CustomerRowChanging" msprop:Generator_RowEvHandlerName="CustomerRowChangeEventHandler" msprop:Generator_RowDeletedName="CustomerRowDeleted" msprop:Generator_UserTableName="Customer" msprop:Generator_RowChangedName="CustomerRowChanged" msprop:Generator_RowEvArgName="CustomerRowChangeEvent" msprop:Generator_RowClassName="CustomerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Cust_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnCust_id" msprop:Generator_ColumnPropNameInRow="Cust_id" msprop:Generator_ColumnPropNameInTable="Cust_idColumn" msprop:Generator_UserColumnName="Cust_id" type="xs:int" />
              <xs:element name="CustName" msprop:Generator_ColumnVarNameInTable="columnCustName" msprop:Generator_ColumnPropNameInRow="CustName" msprop:Generator_ColumnPropNameInTable="CustNameColumn" msprop:Generator_UserColumnName="CustName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="60" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Savings" msprop:Generator_TableClassName="SavingsDataTable" msprop:Generator_TableVarName="tableSavings" msprop:Generator_TablePropName="Savings" msprop:Generator_RowDeletingName="SavingsRowDeleting" msprop:Generator_RowChangingName="SavingsRowChanging" msprop:Generator_RowEvHandlerName="SavingsRowChangeEventHandler" msprop:Generator_RowDeletedName="SavingsRowDeleted" msprop:Generator_UserTableName="Savings" msprop:Generator_RowChangedName="SavingsRowChanged" msprop:Generator_RowEvArgName="SavingsRowChangeEvent" msprop:Generator_RowClassName="SavingsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Savings_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnSavings_id" msprop:Generator_ColumnPropNameInRow="Savings_id" msprop:Generator_ColumnPropNameInTable="Savings_idColumn" msprop:Generator_UserColumnName="Savings_id" type="xs:int" />
              <xs:element name="Cust_id" msprop:Generator_ColumnVarNameInTable="columnCust_id" msprop:Generator_ColumnPropNameInRow="Cust_id" msprop:Generator_ColumnPropNameInTable="Cust_idColumn" msprop:Generator_UserColumnName="Cust_id" type="xs:int" />
              <xs:element name="Amount" msprop:Generator_ColumnVarNameInTable="columnAmount" msprop:Generator_ColumnPropNameInRow="Amount" msprop:Generator_ColumnPropNameInTable="AmountColumn" msprop:Generator_UserColumnName="Amount" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Checking" />
      <xs:field xpath="mstns:Checking_id" />
    </xs:unique>
    <xs:unique name="Customer_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Customer" />
      <xs:field xpath="mstns:Cust_id" />
    </xs:unique>
    <xs:unique name="Savings_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Savings" />
      <xs:field xpath="mstns:Savings_id" />
    </xs:unique>
  </xs:element>
</xs:schema>